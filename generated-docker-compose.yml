version: '2'

networks:
   testchain_net:
       ipam:
           driver: default
           config:
               - subnet: 172.32.0.0/16

services:
   postgres:
       restart: always
       build: ./postgres
       networks:
           testchain_net:
               ipv4_address: 172.32.0.2
       ports:
           - "5432"
       depends_on:
           - data

   data:
       image: postgres:9.6
       networks:
           testchain_net:
               ipv4_address: 172.32.0.3
       volumes:
           - /var/lib/postgresql
       command: "true"

   web1:
       environment:
           - db_suffix=web1
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.4
       depends_on:
           - postgres


   web2:
       environment:
           - db_suffix=web2
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.5
       depends_on:
           - postgres


   web3:
       environment:
           - db_suffix=web3
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.6
       depends_on:
           - postgres


   web4:
       environment:
           - db_suffix=web4
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.7
       depends_on:
           - postgres


   web5:
       environment:
           - db_suffix=web5
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.8
       depends_on:
           - postgres


   web6:
       environment:
           - db_suffix=web6
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.9
       depends_on:
           - postgres


   web7:
       environment:
           - db_suffix=web7
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.10
       depends_on:
           - postgres


   web8:
       environment:
           - db_suffix=web8
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.11
       depends_on:
           - postgres


   web9:
       environment:
           - db_suffix=web9
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.12
       depends_on:
           - postgres


   web10:
       environment:
           - db_suffix=web10
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.13
       depends_on:
           - postgres


   web11:
       environment:
           - db_suffix=web11
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.14
       depends_on:
           - postgres


   web12:
       environment:
           - db_suffix=web12
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.15
       depends_on:
           - postgres


   web13:
       environment:
           - db_suffix=web13
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.16
       depends_on:
           - postgres


   web14:
       environment:
           - db_suffix=web14
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.17
       depends_on:
           - postgres


   web15:
       environment:
           - db_suffix=web15
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.18
       depends_on:
           - postgres


   web16:
       environment:
           - db_suffix=web16
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.19
       depends_on:
           - postgres


   web17:
       environment:
           - db_suffix=web17
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.20
       depends_on:
           - postgres


   web18:
       environment:
           - db_suffix=web18
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.21
       depends_on:
           - postgres


   web19:
       environment:
           - db_suffix=web19
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.22
       depends_on:
           - postgres


   web20:
       environment:
           - db_suffix=web20
#           - postgres_host=postgres
       restart: always
       build: ./blockchain_core
       ports:
           - "5000"
       command: python flask_app.py
       networks:
           testchain_net:
               ipv4_address: 172.32.0.23
       depends_on:
           - postgres

